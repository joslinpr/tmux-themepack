#!/usr/bin/env bash

function SetupTerm(){
    if [ -t 2 ]
    then
        printf -v MSG -- "SetupTerm: STDERR is a tty\n"
        _R=$(tput setaf 1) # Red
        _G=$(tput setaf 2) # Green
        _Y=$(tput setaf 3) # Yellow
        _B=$(tput setaf 4) # Blue
        _N=$(tput rmso; tput sgr0; tput setaf 7) # Color Off
    else
        printf -v MSG -- "SetupTerm: STDERR is not a tty\n"
        _R=""
        _G=""
        _Y=""
        _B=""
        _N=""
    fi
    ((DEBUG>0)) && ErrMsg "$MSG"
}

function ErrMsg(){
    if ((DEBUG>0))
    then
        printf "%bDEBUG: " "$_R"  >&2 ;
    elif ((VERBOSE>0))
    then
        printf "%b" "$_G"  >&2 ;
    fi
    printf "%b" "$@" >&2 ;
    printf "%b" "$_N" >&2 ;
}


function Usage(){
    ME=$(basename "$0")
    local __Usage
    printf -v __Usage "Usage: %s [-vspw] [Message]\n" "$ME"
    __Usage+="\t-h: Print this help.\n"
    __Usage+="\t-v: Be Verbose.\n"
    __Usage+="\t-s: Change Session Name\n"
    __Usage+="\t-p: Change Pane Name\n"
    __Usage+="\t-w: Change Window Name\n"
    __Usage+="Set Pane, Session, or Window Title.  Default is hostname or user@hostname.\n"
    ErrMsg "$__Usage"
}

function RunTests(){
    local ME=$0
    for i in "-ds" "-ds SESSION $*" "-h" "-p PANE $*" "-w WINDOW $*" "-vs SESSION $*" "-x"
    do
        printf -v TST "Testing %s\n" "$i"
        ErrMsg "\n$TST\n"
        $ME "$i"
    done
}

function DoTmux(){
    # Expects Title as ARG*
    local __Title
    __TITLE="$*"
    if [[ -n "$TMUX" ]]
    then
        if ((SESSION>0))
        then
            ((DEBUG>0 || VERBOSE>0)) && ErrMsg "Setting Session Title: $__TITLE\n"
            tmux rename-session "$__TITLE"
        fi
        if ((WINDOW>0))
        then
            ((DEBUG>0 || VERBOSE>0)) && ErrMsg "Setting Window Title: $__TITLE\n"
            tmux rename-window "$__TITLE"
        fi
        if ((PANE>0))
        then
            ((DEBUG>0 || VERBOSE>0)) && ErrMsg "Setting Pane Title: $__TITLE\n"
            tmux select-pane -T "$__TITLE"
        fi
    else
        ErrMsg "You don't seem to be running tmux.\n"
        exit 1
    fi

}

DEBUG=0 	# Default is no debug output
PANE=
SESSION=
VERBOSE=0 	# Default is less chatty
WINDOW=


################################################################################
# Main #
########
SetupTerm
while getopts ":dhpstwv" opt; do
    case $opt in
        d) DEBUG=1 ;;
        h) Usage; exit 0; ;;
        p) PANE=1 ;;
        s) SESSION=1 ;;
        t) shift; RunTests "$*"; exit 0; ;;
        v) VERBOSE=1 ;;
        w) WINDOW=1 ;;
        \?)
            Usage;
            ErrMsg "\nInvalid option: -$OPTARG\n"
            exit 1;
            ;;
    esac
done
shift $((OPTIND-1))
if ((DEBUG>0))
then
    ErrMsg "DEBUG: $DEBUG\n"
    ErrMsg "PANE: $PANE\n"
    ErrMsg "SESSION: $SESSION\n"
    ErrMsg "WINDOW: $WINDOW\n"
    ErrMsg "VERBOSE: $VERBOSE\n"
fi

((DEBUG>0)) && ErrMsg "ARGC: $#\n"
if [ "$#" -ne 0 ]
then
    H=${*}
    printf -v TITLE "%s" "$H"
    ((DEBUG>0)) && ErrMsg "ARGV TITLE: $TITLE\n"
else
    H=$(hostname)
    U=$(id -un)
    if [ "$U" != 'pjoslin' ]
    then
        printf -v TITLE "%s@%s" "$U" "$H"
        ((DEBUG>0)) && ErrMsg "AUTO TITLE: $TITLE\n"
    else
        printf -v TITLE "%s" "$H"
        ((DEBUG>0)) && ErrMsg "AUTO TITLE: $TITLE\n"
    fi
fi
if ((DEBUG>0))
then
    ErrMsg "in Main, TITLE: $TITLE\n"
    ErrMsg "in Main, TERM: $TERM\n"
fi

case $TERM in
    screen* | xterm* )
        printf "\033]0;%s\a" "$TITLE"
        ;;
    tmux* )
        DoTmux "$TITLE"
        #printf "\033]2;%s\033\\ " "${TITLE}"
        ;;
    *)
        :
        ;;
esac
# tmux:
# set window name:    $ printf '\033kWINDOW_NAME\033\\'
# set pane name:      $ printf '\033]2;My Title\033\\'
# vim: set ai et nu cin sts=4 sw=4 ts=4 tw=78 filetype=sh :
